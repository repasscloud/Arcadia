services:
  postgresql:
    build:
      context: .
      dockerfile: Dockerfile.pgsql
    container_name: arcadia_postgresql
    networks:
      - internal
    environment:
      LANG: en_US.UTF-8
      LANGUAGE: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db-init:
    build:
      context: .
      dockerfile: Dockerfile.db-init
    container_name: arcadia_db_init
    networks:
      - internal
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      DB_ACTION: ${DB_ACTION}
    depends_on:
      postgresql:
        condition: service_healthy
    restart: "no"

  arcadia.api:
    build:
      context: .
      dockerfile: Dockerfile.API
      target: final
    container_name: arcadia_api
    networks:
      - internal
      - public
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT_API}
      CONNECTION_STRING: ${CONNECTION_STRING}
      JWTSETTINGS__SECRET: ${JWTSETTINGS__SECRET}
      JWTSETTINGS__ISSUER: ${JWTSETTINGS__ISSUER}
      JWTSETTINGS__AUDIENCE: ${JWTSETTINGS__AUDIENCE}
      ASPNETCORE_URLS: ${WEBAPI_URLS}
    volumes:
      - api_dataprotection_keys:/app/dataprotection-keys
    user: ${APP_UID}
    depends_on:
      - postgresql
      - db-init
    ports:
      - "5050:5000"

  arcadia.webapp:
    build:
      context: .
      dockerfile: Dockerfile.WebApp
      target: final
    container_name: arcadia_webapp
    networks:
      - public
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT_WEBAPP}
      ASPNETCORE_URLS: ${WEBAPI_URLS}
    volumes:
      - webapp_dataprotection_keys:/app/dataprotection-keys
    user: ${APP_UID}
    ports:
      - "8080:8080"

  pgadmin:
    image: dpage/pgadmin4:8.13.0
    container_name: arcadia_pgadmin4
    networks:
      - internal
      - public
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgresql
    ports:
      - "8090:80"

networks:
  internal:
    name: arcadia_internal_network
    driver: bridge

  public:
    name: arcadia_public_network
    driver: bridge

volumes:
  pg_data:
    name: arcadia_pg_data
  api_dataprotection_keys:
    name: arcadia_api_dataprotection_keys
  webapp_dataprotection_keys:
    name: arcadia_webapp_dataprotection_keys
  pgadmin_data:
    name: arcadia_pgadmin_data
